{"version":3,"file":"static/js/170.51a1e3de.chunk.js","mappings":"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","sources":["ui-component/cards/AuthFooter.js","utils/password-strength.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"sourcesContent":["// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\r\n            berrydashboard.io\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\r\n            &copy; codedthemes.com\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","/**\r\n * Password validator for login pages\r\n */\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n    return { label: 'Poor', color: value.errorMain };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport Google from 'assets/images/icons/social-google.svg';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst FirebaseRegister = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const [strength, setStrength] = useState(0);\r\n    const [level, setLevel] = useState();\r\n\r\n    const googleHandler = async () => {\r\n        console.error('Register');\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                width=\"100%\"\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others} width=\"100%\">\r\n                        <Grid container spacing={matchDownSM ? 0 : 2} width=\"100%\">\r\n                            <Grid item xs={12} sm={4}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"First Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"fname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Last Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"lname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"First Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"fname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"First Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"fname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                style={{ backgroundColor: level?.color }}\r\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level?.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"checked\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Agree with &nbsp;\r\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign up\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseRegister;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthRegister from '../auth-forms/AuthRegister';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n// ===============================|| AUTH3 - REGISTER ||=============================== //\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Sign up\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to=\"/pages/login/login3\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Already have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["direction","justifyContent","variant","component","Link","href","target","underline","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","others","theme","useTheme","scriptedRef","useScriptRef","matchDownSM","useMediaQuery","breakpoints","down","showPassword","setShowPassword","useSelector","state","customization","useState","checked","setChecked","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","temp","count","label","color","useEffect","width","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","async","values","setErrors","setStatus","setSubmitting","current","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Grid","container","spacing","item","xs","sm","TextField","fullWidth","margin","name","type","defaultValue","sx","typography","customInput","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","FormHelperText","e","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","Box","mb","alignItems","style","backgroundColor","height","borderRadius","Typography","fontSize","FormControlLabel","control","Checkbox","to","mt","AnimateButton","Button","disableElevation","disabled","AuthWrapper1","minHeight","m","AuthCardWrapper","Logo","Stack","palette","secondary","main","gutterBottom","textAlign","AuthRegister","Divider","textDecoration","AuthFooter"],"sourceRoot":""}